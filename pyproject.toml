[tool.poetry]
name = "langtut"
version = "0.1.0"
description = ""
authors = ["Vlad Goenko <vladislav@offerfit.ai>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
flask = "^3.1.0"
google-auth = "^2.38.0"
google-auth-oauthlib = "^1.2.1"
google-auth-httplib2 = "^0.2.0"
google-api-python-client = "^2.166.0"
google-cloud-texttospeech = "^2.21.0"
pydantic = "^2.11.3"
flask-cors = "^5.0.1"
gspread = "^6.2.0"
oauth2client = "^4.1.3"
dynaconf = "^3.2.10"
openai = "^1.77.0"
python-dotenv = "^1.1.0"
pandas = "^2.2.3"
sqlalchemy = "^2.0.0"
flask-sqlalchemy = "^3.1.0"
flask-session = "^0.8.0"
gunicorn = "^23.0.0"
google-cloud-storage = "^3.1.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.0"
pre-commit = "^3.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff configuration
[tool.ruff]
# Target Python 3.11+
target-version = "py311"

# Set line length to 100 (more readable than default 88)
line-length = 100

# Exclude files/directories
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
    "flask_session",
    "instance",
    "misc",
    "src/routes_original_backup.py",
]

[tool.ruff.lint]
# Enable these rule categories
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "SIM",  # flake8-simplify
    "PTH",  # flake8-use-pathlib
    "RUF",  # ruff-specific rules
]

# Disable specific rules that might be too strict for this project
ignore = [
    "E501",   # line too long (handled by formatter)
    "PTH110", # os.path.exists - not critical for this project
    "PTH100", # os.path.abspath - not critical
    "PTH103", # os.makedirs - not critical
    "PTH123", # open() - not critical
    "PLR0911", # too many return statements
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR2004", # magic values - not critical for this project
    "RUF013", # implicit optional - legacy code style
    "ERA001", # commented code (sometimes useful during development)
    "E722",   # bare except (legacy code)
    "PLW0603", # global statement (used in database.py)
]

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]
# Be more lenient with test files
"test_*.py" = ["ARG", "SIM"]
"**/tests/**" = ["ARG", "SIM"]
# Ignore backup file
"src/routes_original_backup.py" = ["ALL"]

[tool.ruff.lint.isort]
# Group imports properly
known-first-party = ["src"]
force-single-line = false
split-on-trailing-comma = true

[tool.ruff.format]
# Use single quotes
quote-style = "single"
# Indent with 4 spaces
indent-style = "space"
# Don't format docstrings
docstring-code-format = false
